{"ast":null,"code":"var _jsxFileName = \"/Users/webstoryboyhwang/Desktop/youtube2023/src/components/Videos.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Videos = ({\n  videos,\n  title\n}) => {\n  console.log(videos);\n  const formatDate = dateString => {\n    const inputDate = new Date(dateString);\n    const year = inputDate.getFullYear();\n    const month = String(inputDate.getMonth() + 1).padStart(2, '0');\n    const day = String(inputDate.getDate()).padStart(2, '0');\n    const formattedDateString = `${year}.${month}.${day}`;\n    return formattedDateString;\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"view\",\n    className: \"section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"\\uC624\\uB298\\uC758 \", title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"view__wrap\",\n      children: videos.map((video, key) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"view__box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"thumb\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/\",\n            style: {\n              backgroundImage: `url(${video.snippet.thumbnails.high.url})`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"desc\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/\",\n              children: video.snippet.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info\",\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/\",\n              className: \"author\",\n              children: video.snippet.channelTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"data\",\n              children: formatDate(video.snippet.publishedAt)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_c = Videos;\nexport default Videos;\nvar _c;\n$RefreshReg$(_c, \"Videos\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Videos","videos","title","console","log","formatDate","dateString","inputDate","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","formattedDateString","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","video","key","href","style","backgroundImage","snippet","thumbnails","high","url","channelTitle","publishedAt","_c","$RefreshReg$"],"sources":["/Users/webstoryboyhwang/Desktop/youtube2023/src/components/Videos.jsx"],"sourcesContent":["import React from 'react'\n\nconst Videos = ({ videos, title }) => {\n  console.log(videos)\n\n  const formatDate = (dateString) => {\n    const inputDate = new Date(dateString);\n\n    const year = inputDate.getFullYear();\n    const month = String(inputDate.getMonth() + 1).padStart(2, '0');\n    const day = String(inputDate.getDate()).padStart(2, '0');\n\n    const formattedDateString = `${year}.${month}.${day}`;\n    return formattedDateString;\n  };\n  \n  return (\n    <section id=\"view\" className=\"section\">\n      <h2>오늘의 {title}</h2>\n      <div className=\"view__wrap\">\n        {videos.map((video, key) => (\n          <div className=\"view__box\" key={key}>\n            <div className=\"thumb\">\n              <a href=\"/\" style={{ backgroundImage: `url(${video.snippet.thumbnails.high.url})` }}>\n              </a>\n            </div>\n            <div className=\"desc\">\n              <div className=\"title\">\n                <a href=\"/\">{video.snippet.title}</a>\n              </div>\n              <div className=\"info\">\n                <a href=\"/\" className=\"author\">{video.snippet.channelTitle}</a>\n                <span className=\"data\">{formatDate(video.snippet.publishedAt)}</span>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </section>\n  )\n}\n\nexport default Videos"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}